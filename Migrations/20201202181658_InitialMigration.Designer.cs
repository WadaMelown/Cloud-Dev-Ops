// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using purchase.Data;

namespace Purchases.Migrations
{
    [DbContext(typeof(PurchaseContext))]
    [Migration("20201202181658_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("purchase.Models.UserBasket", b =>
                {
                    b.Property<int>("UserBasketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.HasKey("UserBasketId");

                    b.ToTable("basket");
                });

            modelBuilder.Entity("purchase.Models.UserBasketItem", b =>
                {
                    b.Property<int>("UserBasketItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("UserBasketId")
                        .HasColumnType("int");

                    b.HasKey("UserBasketItemId");

                    b.HasIndex("UserBasketId");

                    b.ToTable("UserBasketItem");
                });

            modelBuilder.Entity("purchase.Models.UserBasketItem", b =>
                {
                    b.HasOne("purchase.Models.UserBasket", "basket")
                        .WithMany("Items")
                        .HasForeignKey("UserBasketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("basket");
                });

            modelBuilder.Entity("purchase.Models.UserBasket", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
